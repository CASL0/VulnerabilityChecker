#pragma once
#include <string>
#include <map>
#include <vector>

enum class COMPRESS_ALGORITHM
{
	MSZIP = 0,
	XPRESS,
	XPRESS_HUFF,
	LZMS,
};

class Compressor
{
public:
	Compressor(COMPRESS_ALGORITHM algorithm = COMPRESS_ALGORITHM::MSZIP) :m_algorithm(algorithm) {};
	unsigned long Compress(const std::string& src, std::string& dst) const;
	unsigned long Decompress(const std::vector<char>& src, std::string& dst) const;

private:
	COMPRESS_ALGORITHM m_algorithm;
	static const std::map<COMPRESS_ALGORITHM, DWORD> compressAlgorithmMap;
};