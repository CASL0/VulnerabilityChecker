#pragma once
#include "httpRequest.h"
#include <vector>
#include <string>

// VolnOverView ダイアログ

class VolnOverView : public CDialogEx
{
	DECLARE_DYNAMIC(VolnOverView)

public:
	VolnOverView(CWnd* pParent = nullptr);   // 標準コンストラクター
	virtual ~VolnOverView();

// ダイアログ データ
#ifdef AFX_DESIGN_TIME
	enum { IDD = IDD_VULN_OVERVIEW };
#endif

protected:
	virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV サポート
	virtual BOOL OnInitDialog();

	DECLARE_MESSAGE_MAP()
private:
	static void CALLBACK cb(HINTERNET hInternet, DWORD_PTR dwContext, DWORD dwInternetStatus, LPVOID lpvStatusInformation, DWORD dwStatusInformationLength);
	void OnResponse(HINTERNET hInternet, DWORD dwInternetStatus, LPVOID lpvStatusInformation, DWORD dwStatusInformationLength);
	void DisplayOverView(const std::string& overViewInfo);
	BOOL PreTranslateMessage(MSG* msg);
	static int CALLBACK MyCompareProc(LPARAM lParam1, LPARAM lParam2, LPARAM lParamSort);

private:
	CListCtrl m_listVolnOverView;
	HttpRequest m_httpRequest{ L"脆弱性対策情報" };
	std::vector<char> m_httpBuffer;
	std::vector<char> m_httpResponseBody;
	bool m_sortAscending = true;
	int m_subItem = 0;

public:
	afx_msg void OnNMClickListVolnOverview(NMHDR* pNMHDR, LRESULT* pResult);
	afx_msg void OnLvnColumnclickListVolnOverview(NMHDR* pNMHDR, LRESULT* pResult);
};
